{"version":3,"sources":["components/ContactForm.tsx","components/SocialMediaTable.tsx","components/ContactModal.tsx","components/NavigationBar.tsx","components/Layout.tsx","pages/Home.tsx","pages/About.tsx","components/CardDisplay.tsx","pages/Portfolio.tsx","components/Content.tsx","App.tsx","index.tsx"],"names":["ContactForm","setDisplayContactForm","setResponse","useState","name","setName","message","setMessage","email","setEmail","handleFormSubmit","a","query","fetch","method","Form","Group","className","FloatingLabel","controlId","label","Control","type","onChange","e","target","value","as","style","height","Button","variant","size","onClick","SocialMediaTable","response","handleClick","destination","window","location","href","Table","borderless","hover","textDecorationColor","length","ContactModal","modalOpen","setModalOpen","displayContactForm","Modal","show","onHide","centered","Header","closeButton","Title","Body","Footer","NavigationBar","expanded","setExpanded","Navbar","collapseOnSelect","expand","bg","fixed","Container","Brand","Link","to","Toggle","aria-controls","Collapse","id","Nav","Layout","children","Home","Row","Col","cite","About","Octokit","auth","process","REACT_APP_ACCESS_TOKEN","userAgent","withinDays","date","period","now","moment","then","ISO_8601","week","duration","diff","CardDisplay","repo","Card","text","width","border","created_at","Badge","pill","updated_at","Img","src","Text","description","html_url","fromNow","Portfolio","octokit","repositories","setRepositories","useEffect","promises","rest","repos","listForUser","username","sort","res","data","forEach","repository","push","get","owner","Promise","all","catch","err","console","log","languages","map","language","filter","x","languageSelect","setLanguageSelect","Select","aria-label","defaultValue","idx","CardGroup","key","Content","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04417318.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\n\r\ninterface Props {\r\n    setDisplayContactForm: (value: boolean) => void;\r\n    setResponse: (value: string) => void;\r\n}\r\n\r\nconst ContactForm: React.FC<Props> = ({ setDisplayContactForm, setResponse }: Props) => {\r\n    const [name, setName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    async function handleFormSubmit() {\r\n        const contactFormRequestHref =\r\n            'https://script.google.com/macros/s/AKfycbxz6_KfLFeEtI5NKcJ5G72XGjttAi_2XE_kaisbulNRM9KIxAAxRSew1GNy6GiXyEI/exec';\r\n\r\n        const query = `?name=${name}&message=${message}&email=${email}`;\r\n        await fetch(contactFormRequestHref + query, {\r\n            method: 'POST',\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group className=\"mb-3\">\r\n                <FloatingLabel controlId=\"floatingInput\" label=\"Name\" className=\"mb-3\">\r\n                    <Form.Control type=\"text\" onChange={(e) => setName(e.target.value)} />\r\n                </FloatingLabel>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n                <FloatingLabel controlId=\"floatingTextarea2\" label=\"Message\">\r\n                    <Form.Control\r\n                        as=\"textarea\"\r\n                        style={{ height: '100px' }}\r\n                        onChange={(e) => setMessage(e.target.value)}\r\n                    />\r\n                </FloatingLabel>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n                <FloatingLabel controlId=\"floatingInput\" label=\"Email address\" className=\"mb-3\">\r\n                    <Form.Control type=\"email\" onChange={(e) => setEmail(e.target.value)} />\r\n                </FloatingLabel>\r\n            </Form.Group>\r\n            <i className=\"bi bi-arrow-return-left\"></i>\r\n            <Button\r\n                variant=\"primary\"\r\n                className=\"float-end\"\r\n                size=\"lg\"\r\n                onClick={() => [\r\n                    handleFormSubmit(),\r\n                    setResponse('Thanks for reaching out!'),\r\n                    setDisplayContactForm(false),\r\n                ]}\r\n            >\r\n                Send\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\ninterface Props {\r\n    response: string;\r\n    setDisplayContactForm: (value: boolean) => void;\r\n}\r\n\r\nconst SocialMediaTable: React.FC<Props> = ({ response, setDisplayContactForm }: Props) => {\r\n    function handleClick(destination: string) {\r\n        window.location.href = destination;\r\n    }\r\n    return (\r\n        <Table borderless hover>\r\n            <tbody>\r\n                <tr onClick={() => setDisplayContactForm(true)} style={{ textDecorationColor: 'red' }}>\r\n                    <td>\r\n                        <i className=\"bi bi-envelope-fill\"></i>\r\n                    </td>\r\n                    <td className=\"willItHover\">\r\n                        {response.length > 0 ? <span>{response}</span> : <span>Email</span>}\r\n                    </td>\r\n                </tr>\r\n                <tr\r\n                    onClick={() => handleClick('https://github.com/edward-matthews')}\r\n                    style={{ textDecorationColor: '#24292e' }}\r\n                >\r\n                    <td>\r\n                        <i className=\"bi bi-github\"></i>\r\n                    </td>\r\n\r\n                    <td>GitHub</td>\r\n                </tr>\r\n                <tr\r\n                    onClick={() => handleClick('https://www.google.com/search?q=linkedin')}\r\n                    style={{ textDecorationColor: '#2867B2' }}\r\n                >\r\n                    <td>\r\n                        <i className=\"bi bi-linkedin\"></i>\r\n                    </td>\r\n\r\n                    <td>LinkedIn</td>\r\n                </tr>\r\n            </tbody>\r\n        </Table>\r\n    );\r\n};\r\n\r\nexport default SocialMediaTable;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ContactForm from './ContactForm';\r\nimport SocialMediaTable from './SocialMediaTable';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\n\r\ninterface Props {\r\n    modalOpen: boolean;\r\n    setModalOpen: (value: boolean) => void;\r\n}\r\n\r\nconst ContactModal: React.FC<Props> = ({ modalOpen, setModalOpen }: Props) => {\r\n    const [displayContactForm, setDisplayContactForm] = useState(false);\r\n    const [response, setResponse] = useState('');\r\n\r\n    return (\r\n        <>\r\n            <Modal show={modalOpen} onHide={() => setModalOpen(false)} size=\"lg\" centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Contact Me!</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {displayContactForm ? (\r\n                        <ContactForm setDisplayContactForm={setDisplayContactForm} setResponse={setResponse} />\r\n                    ) : (\r\n                        <SocialMediaTable setDisplayContactForm={setDisplayContactForm} response={response} />\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer></Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContactModal;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ContactModal from './ContactModal';\r\n\r\nconst NavigationBar: React.FC = () => {\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                expanded={expanded}\r\n                collapseOnSelect\r\n                expand=\"lg\"\r\n                bg=\"primary\"\r\n                variant=\"dark\"\r\n                fixed=\"top\"\r\n                className=\"mb-2\"\r\n            >\r\n                <Container>\r\n                    <Navbar.Brand as={Link} to=\"/\">\r\n                        Edward Matthews\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle onClick={() => setExpanded(!expanded)} aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav>\r\n                            <Nav.Link as={Link} to=\"/about\" onClick={() => setExpanded(false)}>\r\n                                About\r\n                            </Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/portfolio\" onClick={() => setExpanded(false)}>\r\n                                Portfolio\r\n                            </Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/articles\" onClick={() => setExpanded(false)}>\r\n                                Articles\r\n                            </Nav.Link>\r\n                            <Button variant=\"secondary\" onClick={() => [setExpanded(false), setModalOpen(true)]}>\r\n                                Contact\r\n                            </Button>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n            <ContactModal modalOpen={modalOpen} setModalOpen={setModalOpen} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport NavigationBar from '../components/NavigationBar';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\ninterface Props {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst Layout: React.FC<Props> = ({ children }: Props) => {\r\n    return (\r\n        <>\r\n            <NavigationBar />\r\n            <Container>{children}</Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <h1>Tum mihi Piso: Quid ergo?</h1>\r\n\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. <mark>Ita nemo beato beatior.</mark> Quae\r\n                    quo sunt excelsiores, eo dant clariora indicia naturae.{' '}\r\n                </p>\r\n\r\n                <h2>Non risu potius quam oratione eiciendum?</h2>\r\n\r\n                <p>\r\n                    Dicam, inquam, et quidem discendi causa magis, quam quo te aut Epicurum reprehensum velim.{' '}\r\n                    <b>Quoniam, si dis placet, ab Epicuro loqui discimus.</b> Hoc ne statuam quidem dicturam pater\r\n                    aiebat, si loqui posset. <i>Duo Reges: constructio interrete.</i> Dic in quovis conventu te omnia\r\n                    facere, ne doleas. Hanc ergo intuens debet institutum illud quasi signum absolvere. Dolere malum\r\n                    est: in crucem qui agitur, beatus esse non potest.{' '}\r\n                </p>\r\n\r\n                <h3>Bonum incolumis acies: misera caecitas.</h3>\r\n\r\n                <p>\r\n                    Hoc dictum in una re latissime patet, ut in omnibus factis re, non teste moveamur. Nunc ita\r\n                    separantur, ut disiuncta sint, quo nihil potest esse perversius. <b>Non igitur bene.</b> An ea, quae\r\n                    per vinitorem antea consequebatur, per se ipsa curabit? <mark>Sed nimis multa.</mark> Ut nemo\r\n                    dubitet, eorum omnia officia quo spectare, quid sequi, quid fugere debeant?{' '}\r\n                    <mark>Nam quid possumus facere melius?</mark>{' '}\r\n                </p>\r\n\r\n                <blockquote cite=\"http://loripsum.net\">\r\n                    Si est nihil in eo, quod perficiendum est, praeter motum ingenii quendam, id est rationem, necesse\r\n                    est huic ultimum esse virtute agere;\r\n                </blockquote>\r\n\r\n                <ol>\r\n                    <li>Quamquam te quidem video minime esse deterritum.</li>\r\n                    <li>Hoc est non modo cor non habere, sed ne palatum quidem.</li>\r\n                    <li>Potius inflammat, ut coercendi magis quam dedocendi esse videantur.</li>\r\n                    <li>Si enim ad populum me vocas, eum.</li>\r\n                    <li>Illud dico, ea, quae dicat, praeclare inter se cohaerere.</li>\r\n                </ol>\r\n\r\n                <h4>Certe nihil nisi quod possit ipsum propter se iure laudari.</h4>\r\n\r\n                <p>\r\n                    Tu quidem reddes; Ut in geometria, prima si dederis, danda sunt omnia. Videmus igitur ut\r\n                    conquiescere ne infantes quidem possint. Sed ne, dum huic obsequor, vobis molestus sim.{' '}\r\n                </p>\r\n\r\n                <ul>\r\n                    <li>Sit sane ista voluptas.</li>\r\n                    <li>Istic sum, inquit.</li>\r\n                    <li>\r\n                        Itaque e contrario moderati aequabilesque habitus, affectiones ususque corporis apti esse ad\r\n                        naturam videntur.\r\n                    </li>\r\n                    <li>Si quicquam extra virtutem habeatur in bonis.</li>\r\n                </ul>\r\n\r\n                <p>\r\n                    In his igitur partibus duabus nihil erat, quod Zeno commutare gestiret. Serpere anguiculos, nare\r\n                    anaticulas, evolare merulas, cornibus uti videmus boves, nepas aculeis. Eiuro, inquit adridens,\r\n                    iniquum, hac quidem de re; Ea, quae dialectici nunc tradunt et docent, nonne ab illis instituta sunt\r\n                    aut inventa sunt? <mark>Sed nimis multa.</mark>{' '}\r\n                </p>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst About: React.FC = () => {\r\n    return <div></div>;\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { GetResponseDataTypeFromEndpointMethod } from '@octokit/types';\r\nimport { Octokit } from 'octokit';\r\nimport moment from 'moment';\r\n\r\nconst octokit = new Octokit({\r\n    auth: process.env.REACT_APP_ACCESS_TOKEN,\r\n    userAgent: 'edward-matthews.github.io v1.0.0',\r\n});\r\ntype GetRepositoryResponseType = GetResponseDataTypeFromEndpointMethod<typeof octokit.rest.repos.get>;\r\n\r\nfunction withinDays(date: string, period: number): boolean {\r\n    const now = moment();\r\n    const then = moment(date, moment.ISO_8601);\r\n    const week = moment.duration(period, 'days');\r\n    const duration = moment.duration(now.diff(then));\r\n\r\n    return duration < week;\r\n}\r\n\r\nconst CardDisplay: React.FC<GetRepositoryResponseType> = (repo) => {\r\n    return (\r\n        <Col>\r\n            <Card bg=\"dark\" text=\"light\" style={{ width: '18rem' }} className=\"mt-2 mx-auto g-2 h-100\" border=\"dark\">\r\n                <Card.Header style={{ height: '2.5rem' }}>\r\n                    {withinDays(repo.created_at, 14) && (\r\n                        <span>\r\n                            <Badge pill bg=\"danger\">\r\n                                New!\r\n                            </Badge>{' '}\r\n                        </span>\r\n                    )}\r\n                    {withinDays(repo.updated_at, 7) && (\r\n                        <Badge pill bg=\"warning\">\r\n                            Updated Recently!\r\n                        </Badge>\r\n                    )}\r\n                </Card.Header>\r\n\r\n                <Card.Body className=\"d-flex flex-column\">\r\n                    <Card.Title>{repo.name}</Card.Title>\r\n                    <Card.Img src=\"https://via.placeholder.com/150\" />\r\n                    <Card.Text>{repo.description}</Card.Text>\r\n                    <Button href={repo.html_url} variant=\"light\" className=\"mt-auto\">\r\n                        View Code\r\n                    </Button>\r\n                </Card.Body>\r\n\r\n                <Card.Footer className=\"text-muted text-end small\">\r\n                    Updated {moment(repo.updated_at, moment.ISO_8601).fromNow()}\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nexport default CardDisplay;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport CardDisplay from '../components/CardDisplay';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport FloatingLabel from 'react-bootstrap/FloatingLabel';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Octokit } from 'octokit';\r\nimport { GetResponseTypeFromEndpointMethod } from '@octokit/types';\r\n\r\nconst Portfolio: React.FC = () => {\r\n    const octokit = new Octokit({\r\n        userAgent: 'edward-matthews.github.io v1.0.0',\r\n    });\r\n    type GetRepositoryResponseType = GetResponseTypeFromEndpointMethod<typeof octokit.rest.repos.get>;\r\n    const [repositories, setRepositories] = useState<GetRepositoryResponseType[]>([]);\r\n    useEffect(() => {\r\n        const promises: Promise<GetRepositoryResponseType>[] = [];\r\n        octokit.rest.repos\r\n            .listForUser({ username: 'edward-matthews', sort: 'updated' })\r\n            .then((res) => res.data)\r\n            .then((data) =>\r\n                data.forEach((repository) =>\r\n                    promises.push(octokit.rest.repos.get({ owner: 'edward-matthews', repo: repository.name })),\r\n                ),\r\n            )\r\n            .then(() => Promise.all(promises).then((res) => setRepositories(res)))\r\n            .catch((err) => console.log(err));\r\n    }, []);\r\n    const languages = repositories.map((repo) => repo.data.language).filter((x): x is string => x !== null);\r\n    const [languageSelect, setLanguageSelect] = useState<string>('all');\r\n    function handleChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n        setLanguageSelect(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FloatingLabel controlId=\"floatingSelect\" label=\"Languages\">\r\n                <Form.Select aria-label=\"Language Select\" onChange={handleChange} defaultValue=\"all\">\r\n                    <option value=\"all\">All</option>\r\n                    {languages.map((language, idx) => (\r\n                        <option value={language} key={idx}>\r\n                            {language}\r\n                        </option>\r\n                    ))}\r\n                </Form.Select>\r\n            </FloatingLabel>\r\n            <CardGroup>\r\n                {repositories.map((repo) => {\r\n                    return languageSelect === repo.data.language || languageSelect === 'all' ? (\r\n                        <CardDisplay {...repo.data} key={repo.data.id} />\r\n                    ) : null;\r\n                })}\r\n            </CardGroup>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Home from '../pages/Home';\r\nimport About from '../pages/About';\r\nimport Portfolio from '../pages/Portfolio';\r\n\r\nconst Content: React.FC = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n                <About />\r\n            </Route>\r\n            <Route path=\"/portfolio\">\r\n                <Portfolio />\r\n            </Route>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Layout from './components/Layout';\r\nimport Content from './components/Content';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Layout>\r\n                    <Content />\r\n                </Layout>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './custom.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}